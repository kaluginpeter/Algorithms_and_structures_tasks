# A. Слишком длинные слова
# ограничение по времени на тест 1 second
# ограничение по памяти на тест 256 megabytes
# вводстандартный ввод
# выводстандартный вывод
# Иногда некоторые слова вроде «localization» или «internationalization» настолько длинны, что их весьма утомительно писать много раз в каком либо тексте.
#
# Будем считать слово слишком длинным, если его длина строго больше 10 символов. Все слишком длинные слова можно заменить специальной аббревиатурой.
#
# Эта аббревиатура строится следующим образом: записывается первая и последняя буква слова, а между ними — количество букв между первой и последней буквой (в десятичной системе счисления и без ведущих нулей).
#
# Таком образом, «localization» запишется как «l10n», а «internationalization» как «i18n».
#
# Вам предлагается автоматизировать процесс замены слов на аббревиатуры. При этом все слишком длинные слова должны быть заменены аббревиатурой, а слова, не являющиеся слишком длинными, должны остаться без изменений.
#
# Входные данные
# В первой строке содержится целое число n (1 ≤ n ≤ 100). В каждой из последующих n строк содержится по одному слову. Все слова состоят из малых латинских букв и имеют длину от 1 до 100 символов.
#
# Выходные данные
# Выведите n строк. В i строке должен находиться результат замены i-го слова из входных данных.
#
# Примеры
# входные данныеСкопировать
# 4
# word
# localization
# internationalization
# pneumonoultramicroscopicsilicovolcanoconiosis
# выходные данныеСкопировать
# word
# l10n
# i18n
# p43s
# Solution O(N) O(N)
import sys
n: int = int(sys.stdin.readline().rstrip())
initial: list = [0] * n
for idx in range(n):
    initial[idx] = sys.stdin.readline().rstrip()
for word in range(n):
    x: str = initial[word]
    if len(x) > 10:
        initial[word] = x[0] + str(len(x) - 2) + x[-1]
print('\n'.join(initial))